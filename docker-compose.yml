name: alcoscore

services:
  frontend:
    build:
      context: ./frontend
      args:
        - VUE_APP_BACKEND_HOST=${BACKEND_HOST_EXTERNAL}
        - VUE_APP_BACKEND_PORT=${BACKEND_PORT_EXTERNAL}
        - VUE_APP_HTTP_PROTOCOL=${HTTP_PROTOCOL}
    ports:
      - ${FRONTEND_PORT_INTERNAL}:80
    # volumes:
    #   - ./frontend/app:/app
    # tty: true


  backend:
    build: ./backend
    ports:
      - "${BACKEND_PORT_INTERNAL}:5001"
    volumes:
      - type: bind
        source: "./backend/src"
        target: "/app"
      - type: bind
        source: "/var/log"
        target: "/var/log"
      - replays:/replays/
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - HASH_PEPPER=${HASH_PEPPER}
      - FRONTEND_HOST=${FRONTEND_HOST_EXTERNAL}
      - FRONTEND_PORT=${FRONTEND_PORT_EXTERNAL}
      - DATABASE_HOST=${DATABASE_HOST}
      - DATABASE_PORT=${DATABASE_PORT}
      - HTTP_PROTOCOL=${HTTP_PROTOCOL}
      - ALLOW_FRONTEND_ORIGIN=${ALLOW_FRONTEND_ORIGIN}
      - USE_REVERSE_PROXY=${USE_REVERSE_PROXY}
      - USE_CLOUDFLARE_PROXY=${USE_CLOUDFLARE_PROXY}

  db:
    image: postgres:17
    container_name: database
    volumes:
      - db_table:/var/lib/postgresql/data/
      - ./database/init/:/docker-entrypoint-initdb.d/
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - ${DATABASE_PORT}:5432

volumes:
  db_table:
  replays:
