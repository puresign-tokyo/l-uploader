services:
  frontend:
    build:
      context: ./frontend
      args:
        - NUXT_PUBLIC_FRONTEND_HOST=${FRONTEND_HOST_EXTERNAL}
        - NUXT_PUBLIC_FRONTEND_PORT=${FRONTEND_PORT_EXTERNAL}
        - NUXT_PUBLIC_BACKEND_HOST=${BACKEND_HOST_EXTERNAL}
        - NUXT_PUBLIC_BACKEND_PORT=${BACKEND_PORT_EXTERNAL}
        - NUXT_PUBLIC_HTTP_PROTOCOL=${HTTP_PROTOCOL}
        - NUXT_PUBLIC_PAGINATION_LIMIT=10
        - NUXT_PUBLIC_USERNAME_LENGTH_LIMIT=${USERNAME_LENGTH_LIMIT}
        - NUXT_PUBLIC_UPLOAD_COMMENT_LENGTH_LIMIT=${UPLOAD_COMMENT_LENGTH_LIMIT}
        - NUXT_PUBLIC_FILESIZE_KB_LIMIT=${FILESIZE_KB_LIMIT}
        - NUXT_PUBLIC_DELETE_PASSWORD_LENGTH_LIMIT=${DELETE_PASSWORD_LENGTH_LIMIT}
        - NUXT_PUBLIC_OPTIONAL_TAG_LENGTH_LIMIT=${OPTIONAL_TAG_LENGTH_LIMIT}
        - NUXT_PUBLIC_RECAPTCHA_SITEKEY=${RECAPTCHA_SITEKEY}
        - NUXT_PUBLIC_RECAPTCHA_ENABLED=${RECAPTCHA_ENABLED}
    ports:
      # nuxt3の本番環境で動くnitroのデフォルトポートは3000
      - ${FRONTEND_PORT_INTERNAL}:3000

  backend:
    build: ./backend
    ports:
      - "${BACKEND_PORT_INTERNAL}:5001"
    volumes:
      - type: bind
        source: "/var/log"
        target: "/var/log"
      - replays:/replays/
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASS=${POSTGRES_PASS}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${PPOSTGRES_PORT}
      - HASH_PEPPER=${HASH_PEPPER}
      - FRONTEND_HOST=${FRONTEND_HOST_EXTERNAL}
      - FRONTEND_PORT=${FRONTEND_PORT_EXTERNAL}
      - ALLOW_DUPLICATE_POSTS=${ALLOW_DUPLICATE_POSTS}
      - MONGO_HOST=${MONGO_HOST}
      - MONGO_PORT=${MONGO_PORT}
      - MONGO_APP_USER=${MONGO_ROOT_USER}
      - MONGO_APP_PASS=${MONGO_ROOT_PASS}
      - MONGO_DATABASE=${MONGO_DATABASE}
      - HTTP_PROTOCOL=${HTTP_PROTOCOL}
      - ALLOW_FRONTEND_ORIGIN=${ALLOW_FRONTEND_ORIGIN}
      - USE_REVERSE_PROXY=${USE_REVERSE_PROXY}
      - USERNAME_LENGTH_LIMIT=${USERNAME_LENGTH_LIMIT}
      - UPLOAD_COMMENT_LENGTH_LIMIT=${UPLOAD_COMMENT_LENGTH_LIMIT}
      - FILESIZE_KB_LIMIT=${FILESIZE_KB_LIMIT}
      - DELETE_PASSWORD_LENGTH_LIMIT=${DELETE_PASSWORD_LENGTH_LIMIT}
      - OPTIONAL_TAG_LENGTH_LIMIT=${OPTIONAL_TAG_LENGTH_LIMIT}
      - PYTHONPATH=/app
      - RECAPTCHA_SECRET=${RECAPTCHA_SECRET}
      - RECAPTCHA_ENABLED=${RECAPTCHA_ENABLED}
    tty: true

  postgresql:
    image: postgres:17
    container_name: ${POSTGRES_HOST}
    volumes:
      - postgresql_table:/var/lib/postgresql/data/
      - ./postgresql/init/:/docker-entrypoint-initdb.d/
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASS}
    ports:
      - ${POSTGRES_PORT}:5432

  mongodb:
    image: mongo:8.0.9
    container_name: ${MONGO_HOST}
    volumes:
      - mongodb_table:/data/db
    environment:
      - MONGO_INITDB_DATABASE=${MONGO_DATABASE}
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASS}
      - MONGO_APP_USER=${MONGO_APP_USER}
      - MONGO_APP_PASS=${MONGO_APP_PASS}
      - MONGO_DATABASE=${MONGO_DATABASE}
    ports:
      - ${MONGO_PORT}:27017

  redis:
    image: redis:8.0
    container_name: redis
    command: redis-server --requirepass yourpassword

volumes:
  postgresql_table:
  mongodb_table:
  replays:
